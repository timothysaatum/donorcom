# Google Cloud Build configuration for secure PostgreSQL deployment
steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/donorcom-api:$COMMIT_SHA', '.']
  
  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/donorcom-api:$COMMIT_SHA']
  
  # Deploy to Cloud Run with secure configuration
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'donorcom-api'
      - '--image=gcr.io/$PROJECT_ID/donorcom-api:$COMMIT_SHA'
      - '--region=us-central1'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--port=8000'
      - '--memory=1Gi'
      - '--cpu=1'
      - '--max-instances=10'
      - '--min-instances=0'
      - '--concurrency=80'
      - '--timeout=300'
      - '--add-cloudsql-instances=$PROJECT_ID:us-central1:donorcom-db'
      - '--set-env-vars=ENVIRONMENT=production,ALGORITHM=HS256'
      - '--update-secrets=SECRET_KEY=secret-key:latest'
      - '--update-secrets=HOST_EMAIL=host-email:latest'
      - '--update-secrets=HOST_PASSWORD=host-password:latest'
      - '--update-secrets=DB_PASSWORD=db-password:latest'
      - '--set-env-vars=DATABASE_URL=postgresql+asyncpg://donorcom_user:$(DB_PASSWORD)@/donorcom?host=/cloudsql/$PROJECT_ID:us-central1:donorcom-db&sslmode=require'

images:
  - 'gcr.io/$PROJECT_ID/donorcom-api:$COMMIT_SHA'

# Grant Cloud Build access to Secret Manager
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/secret-key/versions/latest
      env: 'SECRET_KEY'
    - versionName: projects/$PROJECT_ID/secrets/host-email/versions/latest
      env: 'HOST_EMAIL'
    - versionName: projects/$PROJECT_ID/secrets/host-password/versions/latest
      env: 'HOST_PASSWORD'
    - versionName: projects/$PROJECT_ID/secrets/db-password/versions/latest
      env: 'DB_PASSWORD'