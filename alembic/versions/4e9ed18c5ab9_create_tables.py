"""Create Tables

Revision ID: 4e9ed18c5ab9
Revises: 
Create Date: 2025-08-22 11:30:33.079536

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4e9ed18c5ab9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('facilities',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('facility_name', sa.String(length=100), nullable=False),
    sa.Column('facility_manager_id', sa.UUID(), nullable=False),
    sa.Column('facility_email', sa.String(length=100), nullable=False),
    sa.Column('facility_digital_address', sa.String(length=15), nullable=False),
    sa.Column('facility_contact_number', sa.String(length=20), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['facility_manager_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('facilities', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_facilities_facility_email'), ['facility_email'], unique=True)
        batch_op.create_index(batch_op.f('ix_facilities_facility_manager_id'), ['facility_manager_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_facilities_id'), ['id'], unique=True)

    op.create_table('patients',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('age', sa.Integer(), nullable=False),
    sa.Column('sex', sa.String(length=10), nullable=False),
    sa.Column('diagnosis', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('facility_administrator', 'lab_manager', 'staff', name='user_roles'), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('work_facility_id', sa.UUID(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('verification_token', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['work_facility_id'], ['facilities.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_id'), ['id'], unique=True)

    op.create_table('blood_banks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('phone', sa.String(length=15), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('blood_bank_name', sa.String(length=100), nullable=False),
    sa.Column('facility_id', sa.UUID(), nullable=False),
    sa.Column('manager_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['facility_id'], ['facilities.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['manager_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('blood_banks', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_blood_banks_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_blood_banks_id'), ['id'], unique=True)
        batch_op.create_index(batch_op.f('ix_blood_banks_manager_id'), ['manager_id'], unique=True)

    op.create_table('blood_requests',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('requester_id', sa.UUID(), nullable=True),
    sa.Column('fulfilled_by_id', sa.UUID(), nullable=True),
    sa.Column('facility_id', sa.UUID(), nullable=True),
    sa.Column('request_group_id', sa.UUID(), nullable=False),
    sa.Column('is_master_request', sa.Boolean(), nullable=True),
    sa.Column('blood_type', sa.String(length=10), nullable=False),
    sa.Column('blood_product', sa.String(length=50), nullable=False),
    sa.Column('quantity_requested', sa.Integer(), nullable=False),
    sa.Column('request_status', sa.Enum('pending', 'accepted', 'rejected', 'cancelled', name='requeststatus'), nullable=True),
    sa.Column('processing_status', sa.Enum('pending', 'dispatched', 'completed', name='processingstatus'), nullable=True),
    sa.Column('priority', sa.Enum('urgent', 'not_urgent', name='prioritystatus'), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('cancellation_reason', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('option', sa.String(length=10), nullable=True),
    sa.ForeignKeyConstraint(['facility_id'], ['facilities.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['fulfilled_by_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['requester_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('blood_requests', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_blood_requests_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_blood_requests_request_group_id'), ['request_group_id'], unique=False)

    op.create_table('dashboard_daily_summary',
    sa.Column('facility_id', sa.UUID(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('total_requests', sa.Integer(), nullable=False),
    sa.Column('total_transferred', sa.Integer(), nullable=False),
    sa.Column('total_stock', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['facility_id'], ['facilities.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('facility_id', 'date')
    )
    op.create_table('notifications',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('message', sa.String(length=500), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('blood_inventory',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('blood_product', sa.String(length=50), nullable=False),
    sa.Column('blood_type', sa.String(length=10), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('expiry_date', sa.Date(), nullable=False),
    sa.Column('blood_bank_id', sa.UUID(), nullable=False),
    sa.Column('added_by_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['added_by_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['blood_bank_id'], ['blood_banks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('blood_inventory', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_blood_inventory_id'), ['id'], unique=True)

    op.create_table('blood_distributions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('blood_product_id', sa.UUID(), nullable=True),
    sa.Column('dispatched_from_id', sa.UUID(), nullable=False),
    sa.Column('dispatched_to_id', sa.UUID(), nullable=False),
    sa.Column('created_by_id', sa.UUID(), nullable=True),
    sa.Column('blood_product', sa.String(length=50), nullable=False),
    sa.Column('blood_type', sa.String(length=10), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('pending_receive', 'in_transit', 'returned', name='distribution_status'), nullable=False),
    sa.Column('date_dispatched', sa.DateTime(), nullable=True),
    sa.Column('date_delivered', sa.DateTime(), nullable=True),
    sa.Column('tracking_number', sa.String(length=100), nullable=True),
    sa.Column('notes', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['blood_product_id'], ['blood_inventory.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['dispatched_from_id'], ['blood_banks.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['dispatched_to_id'], ['facilities.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('blood_distributions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_blood_distributions_id'), ['id'], unique=True)

    op.create_table('track_states',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('blood_distribution_id', sa.UUID(), nullable=True),
    sa.Column('blood_request_id', sa.UUID(), nullable=False),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['blood_distribution_id'], ['blood_distributions.id'], ),
    sa.ForeignKeyConstraint(['blood_request_id'], ['blood_requests.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('track_states')
    with op.batch_alter_table('blood_distributions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_blood_distributions_id'))

    op.drop_table('blood_distributions')
    with op.batch_alter_table('blood_inventory', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_blood_inventory_id'))

    op.drop_table('blood_inventory')
    op.drop_table('notifications')
    op.drop_table('dashboard_daily_summary')
    with op.batch_alter_table('blood_requests', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_blood_requests_request_group_id'))
        batch_op.drop_index(batch_op.f('ix_blood_requests_id'))

    op.drop_table('blood_requests')
    with op.batch_alter_table('blood_banks', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_blood_banks_manager_id'))
        batch_op.drop_index(batch_op.f('ix_blood_banks_id'))
        batch_op.drop_index(batch_op.f('ix_blood_banks_email'))

    op.drop_table('blood_banks')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_id'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    op.drop_table('patients')
    with op.batch_alter_table('facilities', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_facilities_id'))
        batch_op.drop_index(batch_op.f('ix_facilities_facility_manager_id'))
        batch_op.drop_index(batch_op.f('ix_facilities_facility_email'))

    op.drop_table('facilities')
    # ### end Alembic commands ###
