"""create tables

Revision ID: 814f6b14d14d
Revises: 
Create Date: 2025-04-24 23:40:31.761747

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '814f6b14d14d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('facility_administrator', 'lab_manager', 'staff', name='user_roles'), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('verification_token', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_id'), ['id'], unique=True)

    op.create_table('facilities',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('facility_name', sa.String(length=100), nullable=False),
    sa.Column('facility_manager_id', sa.UUID(), nullable=False),
    sa.Column('facility_email', sa.String(length=100), nullable=False),
    sa.Column('facility_digital_address', sa.String(length=15), nullable=False),
    sa.Column('facility_contact_number', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['facility_manager_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('facilities', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_facilities_facility_email'), ['facility_email'], unique=True)
        batch_op.create_index(batch_op.f('ix_facilities_facility_manager_id'), ['facility_manager_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_facilities_id'), ['id'], unique=True)

    op.create_table('blood_banks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('phone', sa.String(length=15), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('blood_bank_name', sa.String(length=100), nullable=False),
    sa.Column('facility_id', sa.UUID(), nullable=False),
    sa.Column('manager_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['facility_id'], ['facilities.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['manager_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('blood_banks', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_blood_banks_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_blood_banks_id'), ['id'], unique=True)
        batch_op.create_index(batch_op.f('ix_blood_banks_manager_id'), ['manager_id'], unique=True)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('blood_banks', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_blood_banks_manager_id'))
        batch_op.drop_index(batch_op.f('ix_blood_banks_id'))
        batch_op.drop_index(batch_op.f('ix_blood_banks_email'))

    op.drop_table('blood_banks')
    with op.batch_alter_table('facilities', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_facilities_id'))
        batch_op.drop_index(batch_op.f('ix_facilities_facility_manager_id'))
        batch_op.drop_index(batch_op.f('ix_facilities_facility_email'))

    op.drop_table('facilities')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_id'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    # ### end Alembic commands ###
